{#
/**
 * @file
 * Theme override to turn a multivalue field into a Bootstrap Carousel.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @ingroup templates
 *
 * @see template_preprocess_field()
 */
#}

{%
  set classes = [
    'featured-image',
    'carousel',
    'slide'
  ]
%}

{# Make a unique number. #}
{% set unique = 'featured-image--id-' ~ random() %}

{# If more than 1, use the Bootstrap markup. #}
{% if items|length > 1 %}
  {# Adds attributes and classes. #}
  <div{{ attributes.addClass(classes).setAttribute('id', unique).setAttribute('data-interval', '4000').setAttribute('data-ride', 'carousel') }}>
    {# For the carousel indicators, we loop through. #}
    <ol class="carousel-indicators">
      {% for key, item in items if key|first != '#' %}
        <li class="{% if loop.first %}active{% endif %}" data-slide-to="{{ key }}" data-target="#{{ unique }}"></li>
      {% endfor %}
    </ol>
    {# We repeat the loop for the carousel items. #}
    <div class="carousel-inner" role="list">
      {% for key, item in items if key|first != '#' %}
        <div class="featured-image__slide-{{ key + 1 }} carousel-item{% if loop.first %} active{% endif %}" role="listitem">{{ item.content }}</div>
      {% endfor %}
    </div>
    <a class="carousel-control-prev" href="#{{ unique }}" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" href="#{{ unique }}" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
    </a>
  </div>
{# If not more than one, just print the field. #}
{% else %}
  {% for item in items %}
    {{ item.content }}
  {% endfor %}
{% endif %}
